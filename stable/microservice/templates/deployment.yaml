{{- if not .Values.argoRollouts.enabled }}
{{- if .Values.deployment }}
{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
{{ include "application.labels.unevenlabs" . | indent 4 }}
{{ include "application.labels.chart" . | indent 4 }}
{{- if .Values.deployment.additionalLabels }}
{{ toYaml .Values.deployment.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.deployment.commonLabels }}
{{ toYaml .Values.deployment.commonLabels | indent 4 }}
{{- end }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
  name: {{ template "application.name" . }}
  namespace: {{ template "application.namespace" . }}
spec:
  {{- if .Values.deployment.replicas }}
  replicas: {{ .Values.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
{{ include "application.labels.selector" . | indent 6 }}
  {{- if .Values.deployment.strategy }}
  strategy:
{{ toYaml .Values.deployment.strategy | indent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
{{ include "application.labels.selector" . | indent 8 }}
{{- if .Values.deployment.podLabels }}
{{ toYaml .Values.deployment.podLabels | indent 8 }}
{{- end }}
{{- if .Values.deployment.commonLabels }}
{{ toYaml .Values.deployment.commonLabels | indent 8 }}
{{- end }}
{{- if .Values.opa.enabled }}
        opa-injection: "enabled"
{{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/vault-configmap: {{ include (print $.Template.BasePath "/vault-configmap.yaml") . | sha256sum }}
{{- if .Values.vault.enabled }}
{{ include "vault.annotations" (list . .Values.vault) | indent 8 }}
{{- end }}
{{- with .Values.deployment.additionalPodAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      hostNetwork: {{ .Values.deployment.hostNetwork | default false}}
      {{- if .Values.deployment.initContainers }}
      initContainers:
{{ toYaml .Values.deployment.initContainers | indent 6 }}
      {{- end }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.deployment.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.deployment.tolerations }}
      tolerations:
{{ toYaml .Values.deployment.tolerations | indent 8 -}}
      {{- end }}
      {{- if .Values.deployment.affinity }}
      affinity:
{{ toYaml .Values.deployment.affinity | indent 8 -}}
      {{- end }}
      {{- if .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.deployment.imagePullSecrets }}
      {{- end }}
      containers:
      - name: {{ .Values.deployment.name | default (include "application.name" .) }}
        image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        {{- if .Values.deployment.command }}
        command: {{- include "application.tplvalues.render" (dict "value" .Values.deployment.command "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.deployment.args }}
        args: {{- include "application.tplvalues.render" (dict "value" .Values.deployment.args "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.deployment.ports }}
        ports:
{{ toYaml .Values.deployment.ports | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.envFrom }}
        envFrom:
        {{- range .Values.deployment.envFrom }}
        {{- if (eq .type "configmap") }}
        - configMapRef:
            {{- if .name }}
            name: {{ .name }}
            {{- else if .nameSuffix }}
            name: {{ template "application.name" $ }}-{{ .nameSuffix }}
            {{- else }}
            name: {{ template "application.name" $ }}
            {{- end }}
        {{- end }}
        {{- if (eq .type "secret") }}
        - secretRef:
            {{- if .name }}
            name: {{ .name }}
            {{- else if .nameSuffix }}
            name: {{ template "application.name" $ }}-{{ .nameSuffix }}
            {{- else }}
            name: {{ template "application.name" $ }}
            {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.deployment.env }}
        env:
{{ toYaml .Values.deployment.env | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.probes.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.deployment.probes.livenessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.probes.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.deployment.probes.readinessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.probes.startupProbe }}
        startupProbe:
{{ toYaml .Values.deployment.probes.startupProbe | indent 10 }}
        {{- end }}
      {{- if or (.Values.deployment.volumeMounts) (and (eq .Values.persistence.enabled true) (eq .Values.persistence.mountPVC true) )}}
        volumeMounts:
        {{- if (eq .Values.persistence.mountPVC true) }}
        - mountPath: {{ .Values.persistence.mountPath }}
          name: {{ template "application.name" . }}-data
        {{- end }}
        {{- if .Values.deployment.volumeMounts }}
{{ toYaml .Values.deployment.volumeMounts | indent 8 }}
        {{- end }}
      {{- end }}
        resources:
          limits:
            memory: {{ .Values.deployment.resources.limits.memory }}
            cpu: {{ .Values.deployment.resources.limits.cpu }}
          requests:
            memory: {{ .Values.deployment.resources.requests.memory }}
            cpu: {{ .Values.deployment.resources.requests.cpu }}
        {{- if .Values.deployment.additionalContainers }}
{{ toYaml .Values.deployment.additionalContainers | indent 6 }}
        {{- end }}
        {{- if .Values.deployment.securityContext }}
      securityContext:
{{ toYaml .Values.deployment.securityContext | indent 8 }}
          {{- end }}
      {{- if or (.Values.deployment.volumes) (and (eq .Values.persistence.enabled true) (eq .Values.persistence.mountPVC true) )}}
      volumes:
        {{- if (eq .Values.persistence.mountPVC true) }}
      - name: {{ template "application.name" . }}-data
        persistentVolumeClaim:
          claimName: {{ template "application.name" . }}-data
        {{- end }}
        {{- if .Values.deployment.volumes }}
{{ include "application.tplvalues.render" ( dict "value" .Values.deployment.volumes "context" $ ) | indent 6 }}
        {{- end }}
      {{- end }}
      {{- if and .Values.rbac.deployment.enabled .Values.rbac.serviceAccount.enabled }}
      {{- if .Values.rbac.serviceAccount.name }}
      serviceAccountName: {{ .Values.rbac.serviceAccount.name }}
        {{- else }}
      serviceAccountName: {{ template "application.name" . }}
      {{- end }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
