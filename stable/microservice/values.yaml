# Name of the application.
applicationName: "example"

namespaceOverride: ""

# These labels will be added on all resources, and you can add additional labels from below on individual resource
labels:
  environment: ""
  owner: ""
  application: ""
  chain: shared

deployment:
  enabled: true

  # use host networking
  # hostNetwork: false

  # By default deploymentStrategy is set to rollingUpdate with maxSurge of 25% and maxUnavailable of 25%
  # You can change type to `Recreate` or can uncomment `rollingUpdate` specification and adjust them to your usage.
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  # Select nodes to deploy which matches the following labels
  nodeSelector:
    # cloud.google.com/gke-nodepool: default-pool

  # Init containers which runs before the app container
  initContainers:
  # - name: init-contaner
  #   image: busybox
  #   imagePullPolicy: IfNotPresent
  #   command: ['/bin/sh']

  # Additional labels for Deployment
  additionalLabels:
    # key: value

  # Additional label added on pod which is used in Service's Label Selector
  podLabels:
    # env: prod

  # Common labels for pod and deployment
  commonLabels:
    # commonKey: commonValue

  # Annotations on deployments
  annotations:

  # Additional Pod Annotations added on pod created by this Deployment
  additionalPodAnnotations:
    # key: value

  # Replicas to be created
  replicas:

  # Secrets used to pull image
  imagePullSecrets: "github-docker-registry"

  # If want to mount Envs from configmap or secret
  envFrom: []
  # - type: configmap
  #   name: my-configmap
  # - type: configmap
  #   nameSuffix: your-configmap
  # - type: secret
  #   name: my-secret

  # Environment variables to be passed to the app container
  env:
  # - name: ENVIRONMENT
  #   value: "dev"

  # Volumes to be added to the pod
  volumes:
    # - name: config-volume
    #   configMap:
    #     name: configmap-name
    # - name: configmap-volume
    #   configMap:
    #     name: '{{ template "application.name" . }}-configmap-nameSuffix'
    # - name: secret-volume
    #   secret:
    #     secretName: secret-name
    # - name: volume-name
    #   emptyDir: {}
    # - name: persistent-volume-name
    #   persistentVolumeClaim:
    #     claimName: claim-name

  # Mount path for Volumes
  volumeMounts:
    # - mountPath: /path
    #   name: volume-name

  # Taint tolerations for nodes
  tolerations:
    # - key: "dedicated"
    #   operator: "Equal"
    #   value: "app"
    #   effect: "NoSchedule"

  # Pod affinity and pod anti-affinity allow you to specify rules about how pods should be placed relative to other pods.
  affinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: disktype
  #          operator: In
  #          values:
  #          - ssd

  # Image of the app container
  image:
    repository: ghcr.io/unevenlabs/example-app/example-app
    tag: 1.0.0
    pullPolicy: IfNotPresent

  # Readiness and Liveness probes
  probes:
    readinessProbe:
      # failureThreshold: 3
      # periodSeconds: 10
      # successThreshold: 1
      # timeoutSeconds: 1
      # initialDelaySeconds: 10
      # httpGet:
      #   path: /health
      #   port: 80
    livenessProbe:
      # failureThreshold: 3
      # periodSeconds: 10
      # successThreshold: 1
      # timeoutSeconds: 1
      # initialDelaySeconds: 10
      # httpGet:
      #   path: /health
      #   port: 80
    startupProbe:
      # failureThreshold: 3
      # periodSeconds: 10
      # successThreshold: 1
      # timeoutSeconds: 1
      # initialDelaySeconds: 10
      # httpGet:
      #   path: /health
      #   port: 80

  # Resources to be defined for pod
  resources:
    limits:
      memory: 512Mi
      cpu: 0.5
    requests:
      memory: 64Mi
      cpu: 0.1

  # Add additional containers besides init and app containers
  additionalContainers:
  # - name: sidecar-contaner
  #   image: busybox
  #   imagePullPolicy: IfNotPresent
  #   command: ['/bin/sh']

  # Security Context for the pod
  securityContext:
    # fsGroup: 2000

  # Command for primary container
  command: []

  # Args for primary contaner
  args: []

  # List of ports for the primary container
  ports:
  #- containerPort: 80
  #  name: http
  #  protocol: TCP
  #- containerPort: 443
  #  name: https
  #  protocol: TCP

# Add Storage volumes to the pods
persistence:
  enabled: false
  mountPVC: false
  mountPath: "/"
  accessMode: ReadWriteOnce
  ## If defined, storageClass: <storageClass>
  ## If set to "-", storageClass: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClass spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "-"
  additionalLabels:
    # key: "value"
  annotations:
  #  "helm.sh/resource-policy": keep
  storageSize: 8Gi

# Additional persistentVolumeClaims
persistentVolumeClaims:
  # - name: data
  #   accessMode: ReadWriteOnce
  #   size: 5Gi
  #   storageClassName: standard
  # - name: backups
  #   accessMode: ReadWriteMany
  #   size: 10Gi
  #   storageClassName: slow
  # - name: logs
  #   accessMode: ReadWriteOnce
  #   size: 2Gi
  #   storageClassName: fast

# Service object for servicing pods
service:
  enabled: true

  additionalLabels:
    # expose: "true"

  annotations:
    # config.xposer.unevenlabs.com/Domain: unevenlabs.com

  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 80

# Role Based Access Control
rbac:
  enabled: false
  # Use RBAC on deployment or not
  deployment:
    enabled: false

  statefulSet:
    enabled: false

  # Service Account to use by pods
  serviceAccount:
    enabled: false

  # roles:
  #   - name: pods-reader
  #     rules:
  #       - verbs:
  #           - get
  #         apiGroups:
  #           - ''
  #         resources:
  #           - pods

  # clusterroles:
  #   - name: cm-reader
  #     rules:
  #       - verbs:
  #           - get
  #           - list
  #         apiGroups:
  #           - ''
  #         resources:
  #           - configmaps

# Additional ConfigMaps
configMap:
  enabled: false
  # additionalLabels:
  #   key: value
  # annotations:
  #   key: value
  files:
  # - nameSuffix: code-config
  #   additionalLabels:
  #     key: value
  #   annotations:
  #     key: value
  #   data:
  #     key1: value1
  #     key2: value2
  # - nameSuffix: dev-config
  #   data:
  #     key1: value1
  #     key2: value2

# Additional Secrets
secret:
  enabled: false
  additionalLabels:
    # key: value
  annotations:
    # key: value
  files:
  # - nameSuffix: credentials
  #   data:
  #     secretKey1: secretValue1
  #     secretKey2: secretValue2
  # - nameSuffix: password
  #   data:
  #     secretKey1: secretValue1
  #     secretKey2: secretValue2
  # - nameSuffix: secret-from-service-account
  #   type: kubernetes.io/service-account-token

# Virtual Service for Istio ingress
virtualService:
  # -
  #    # Additional labels
  #    additionalLabels:
  #      # key: value

  #   # Additional annotations
  #   annotations:
  #     # key: value

  #   # Istio gateway
  #   gateways:
  #   # - default/default-gateway

  #   # Matching hosts
  #   hosts:
  #   - example.dev.unevenlabs.com

  #   advancedMatch:
  #   - uri:
  #       prefix: /login
  #   - uri:
  #       prefix: /admin
  #     rewrite:
  #       uri: /

  #   destination:
  #     # Service name of the application
  #     host: example

  #     # Service port of the application
  #     portNumber: 80

  #   # Customize response header
  #   headers:
  #     request:
  #       set:
  #         - foo1: example1
  #         - foo2: example2
  #       add:
  #         - bar1: example1
  #         - bar2: example2
  #       remove:
  #         - baz

  #     response:
  #       set:
  #         - qux1: example1
  #         - qux2: example2
  #       add:
  #         - fred1: example1
  #         - fred2: example2
  #       remove:
  #         - thud

  #   # Cross-origin resource sharing for service
  #   corsPolicy:
  #     # Allowed origins
  #     allowOrigins:
  #     - https://example.com
  #     # List of allowed HTTP methods
  #     allowMethods:
  #     - POST
  #     - GET
  #     # Allowed to send request using credentials
  #     allowCredentials: true
  #     # List of allowed HTTP headers
  #     allowHeaders:
  #     - X-Foo-Bar
  #     # Cache duration of preflight request
  #     maxAge: "24h"

  #   # Manual testing of canary version with header "app-version: canary"
  #   # Dependent from "argoRollouts" section.
  #  canaryMatch: # Optional for manual testing with header "app-version: canary"
  #    - headers:
  #        app-version:
  #          exact: canary

# Istio AuthorizationPolicy for service, used for Whitelisting purposes
authorizationPolicy:
#  -
#    # Additional labels
#    additionalLabels:
#       key: value
#    # Additional annotations
#    annotations:
#      key: value
#    matchLabels:
#      application: "so-call-me-maybe-application"
#    # List of allowed ips/cidr
#    remoteIpBlocks:
#      - "8.8.8.8"
#      - "8.8.1.1/24"
#    # List of allowed ips checked by xff header
#    remoteIps:
#      - "8.8.4.4"
#    # List of allowed hosts
#    hosts:
#      - "call-me-maybe.dev.unevenlabs.com"
#    # List of allowed HTTP methods
#    methods:
#      - "POST"
#    # List of allowed HTTP paths {}
#    paths:
#      - "/heres-my-number"

# Service Monitor to collect Prometheus metrices
serviceMonitor:
  enabled: false

  # Additional labels
  additionalLabels:
    # key: value

  # Additional annotations
  annotations:
    # key: value

  # List of the endpoints of service from which prometheus will scrape data
  endpoints:
    - interval: 5s
      path: /actuator/prometheus
      port: http

# autoscaling is used for horizonal pod autoscaling
autoscaling:
  # enabled is a boolean flag for enabling or disabling autoscaling
  enabled: false
  # additionalLabels defines additional labels
  additionalLabels:
    # key: value
  # annotations defines annotations in key value pair
  annotations:
    # key: value
  # minReplicas sets the minimum number of replicas
  minReplicas: 1
  # maxReplicas sets the maximum number of replicas
  maxReplicas: 10
  # metrics is the list of metrics used for hpa
  metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60

# AlertmanagerConfig object for defining application specific alertmanager configurations
alertmanagerConfig:
  enabled: false

  # AlertmanagerConfig selectionLabels to specify label to be picked up by Alertmanager to add it to base config. Read more about it at [https://docs.openshift.com/container-platform/4.7/rest_api/monitoring_apis/alertmanager-monitoring-coreos-com-v1.html] under .spec.alertmanagerConfigSelector
  selectionLabels:
    alertmanagerConfig: "workload"

  # AlertmanagerConfig spec, read details here [https://docs.openshift.com/container-platform/4.7/rest_api/monitoring_apis/alertmanagerconfig-monitoring-coreos-com-v1alpha1.html]
  spec:
    route:
    #   receiver: "null"
    #   groupBy:
    #   - job
    #   routes:
    #   - receiver: "null"
    #     groupBy:
    #     - alertname
    #     - severity
    #     continue: true
    #   groupWait: 30s
    #   groupInterval: 5m
    #   repeatInterval: 12h
    receivers: []
    # - name: "null"
    inhibitRules: []
    # - sourceMatch:
    #     severity: 'critical'
    #   targetMatch:
    #     severity: 'warning'
    #   equal: ['cluster', 'service']

# PrometheusRule object for defining application alerting rules
prometheusRule:
  enabled: false

  # PrometheusRule labels
  additionalLabels:
    # prometheus: unevenlabs-workload-monitoring
    # role: alert-rules

  # Groups with alerting rules. Read more here [https://docs.openshift.com/container-platform/4.7/rest_api/monitoring_apis/prometheusrule-monitoring-coreos-com-v1.html]

  groups:
    []
    # - name: example-app-uptime
    #   rules:
    #     - alert: ExampleAppDown
    #       annotations:
    #         message: >-
    #           The Example App is Down (Test Alert)
    #       expr: up{namespace="test-app"} == 0
    #       for: 1m
    #       labels:
    #         severity: critical

# Cron jobs
jobs:
  # first cron
  # - name: hello-world
  #   image:
  #     repository: hello-world
  #     tag: latest
  #     imagePullPolicy: IfNotPresent
  #   schedule: "* * * * *"
  #   failedJobsHistoryLimit: 1
  #   successfulJobsHistoryLimit: 3
  #   activeDeadlineSeconds: 60
  #   concurrencyPolicy: Allow
  #   restartPolicy: OnFailure
  #   ttlSecondsAfterFinished: 100
  #   command: ["npm", "run", "script"]

  # # second cron
  # - name: hello-ubuntu
  #   image:
  #     repository: ubuntu
  #     tag: latest
  #     imagePullPolicy: Always
  #   schedule: "*/5 * * * *"
  #   command: ["/bin/bash"]
  #   args:
  #     - "-c"
  #     - "echo $(date) - hello from ubuntu"
  #   resources:
  #     limits:
  #       cpu: 50m
  #       memory: 256Mi
  #     requests:
  #       cpu: 50m
  #       memory: 256Mi
  #   failedJobsHistoryLimit: 1
  #   successfulJobsHistoryLimit: 3
  #   concurrencyPolicy: Forbid
  #   restartPolicy: OnFailure

  # # third cron
  # - name: hello-env-var
  #   securityContext:
  #     runAsUser: 1000
  #     runAsGroup: 1000
  #     fsGroup: 2000
  #   image:
  #     repository: busybox
  #     tag: latest
  #     imagePullPolicy: Always
  #   # optional env vars
  #   env:
  #   - name: ECHO_VAR
  #     value: "busybox"
  #   envFrom:
  #   - type: configmap
  #     name: my-configmap
  #   - type: configmap
  #     nameSuffix: your-configmap
  #   - type: secret
  #     name: my-secret
  #   schedule: "* * * * *"
  #   command: ["/bin/sh"]
  #   args:
  #     - "-c"
  #     - "echo $(date) - hello from $ECHO_VAR"
  #     - "echo $(date) - loaded secret $SECRET_DATA"
  #     - "echo $(date) - loaded config $CONFIG_DATA"
  #   resources:
  #     limits:
  #       cpu: 50m
  #       memory: 256Mi
  #     requests:
  #       cpu: 50m
  #       memory: 256Mi
  #   failedJobsHistoryLimit: 1
  #   successfulJobsHistoryLimit: 3
  #   concurrencyPolicy: Forbid
  #   restartPolicy: Never
  #   nodeSelector:
  #     type: infra
  #   tolerations:
  #   - effect: NoSchedule
  #     operator: Exists
  #   affinity:
  #     nodeAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         nodeSelectorTerms:
  #         - matchExpressions:
  #           - key: kubernetes.io/e2e-az-name
  #             operator: In
  #             values:
  #             - e2e-az1
  #             - e2e-az2

  #  # first regular job
  #  - name: hello-world-job
  #    image:
  #      repository: hello-world
  #      tag: latest
  #      imagePullPolicy: IfNotPresent
  #    concurrencyPolicy: Allow
  #    restartPolicy: OnFailure
  #    parallelism: 2
  #    completions: 2

vault:
  enabled: false
  role: "development"
  path: "k8s-applications"
  secretsFile:
    enabled: false
    # restartCommand: "restart" # Command that will be called when the last file is loaded and is usually used to restart the container
    additionalLabels:
      # key: value
    annotations:
      # key: value
    files:
    # - mountPath: "/keys/custom-content-key.json"
    #   secretPath: "unevenlabs/test/app/keys"
    #   contents: # This can be used instead of the secretKey to map secrets individually
    #     - name: "username"
    #       value: .Data.username
    #     - name: "password"
    #       value: .Data.password
    #     - name: "endpoint"
    #       value: .Data.endpoint
    #   command: "echo 'Test command'" # Will trigger the command as soon as this file has been deployed
    # - mountPath: "/keys/key-1.json"
    #   secretPath: "unevenlabs/test/app/keys"
    #   secretKey: "KEY1"

# Enable opa-sidecar injection
opa:
  enabled: false

statefulSet:
  enabled: false

  # By default deploymentStrategy is set to rollingUpdate with maxSurge of 25% and maxUnavailable of 25%
  # You can change type to `Recreate` or can uncomment `rollingUpdate` specification and adjust them to your usage.
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  # use host network
  # hostNetwork: false

  # Select nodes to deploy which matches the following labels
  nodeSelector:
  # cloud.google.com/gke-nodepool: default-pool

  # Init containers which runs before the app container
  initContainers:
  # - name: init-contaner
  #   image: busybox
  #   imagePullPolicy: IfNotPresent
  #   command: ['/bin/sh']

  # Additional labels for Deployment
  additionalLabels:
    type: streaming
  # key: value

  # Additional label added on pod which is used in Service's Label Selector
  podLabels:
    env: local
  # env: prod

  # Annotations on deployments
  annotations:

  # Additional Pod Annotations added on pod created by this Deployment
  additionalPodAnnotations:
  # key: value

  # Replicas to be created
  replicas: 1

  # Secrets used to pull image
  imagePullSecrets: "github-docker-registry"

  # If want to mount Envs from configmap or secret
  envFrom: []
  # - type: configmap
  #   name: my-configmap
  # - type: configmap
  #   nameSuffix: your-configmap
  # - type: secret
  #   name: my-secret

  # Environment variables to be passed to the app container
  env:
    - name: ENVIRONMENT
      value: "local"
  # - name: ENVIRONMENT
  #   value: "dev"

  # Volumes to be added to the pod
  volumes:
  # - name: config-volume
  #   configMap:
  #     name: configmap-name
  # - name: configmap-volume
  #   configMap:
  #     name: '{{ template "application.name" . }}-configmap-nameSuffix'
  # - name: secret-volume
  #   secret:
  #     secretName: secret-name
  # - name: volume-name
  #   emptyDir: {}
  # - name: persistent-volume-name
  #   persistentVolumeClaim:
  #     claimName: claim-name

  # Mount path for Volumes
  mountPath: /tmp
  #  - mountPath: /tmp
  #    name: price-stream-agg-data
  # - mountPath: /path
  #   name: volume-name

  # Taint tolerations for nodes
  tolerations:
  # - key: "dedicated"
  #   operator: "Equal"
  #   value: "app"
  #   effect: "NoSchedule"

  # Pod affinity and pod anti-affinity allow you to specify rules about how pods should be placed relative to other pods.
  affinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: disktype
  #          operator: In
  #          values:
  #          - ssd

  # Image of the app container
  image:
    repository: ghcr.io/unevenlabs/example-app/example-app
    tag: 1.0.0
    pullPolicy: IfNotPresent

  # Readiness and Liveness probes
  probes:
    readinessProbe:
    # failureThreshold: 3
    # periodSeconds: 10
    # successThreshold: 1
    # timeoutSeconds: 1
    # initialDelaySeconds: 10
    # httpGet:
    #   path: /health
    #   port: 80
    livenessProbe:
    # failureThreshold: 3
    # periodSeconds: 10
    # successThreshold: 1
    # timeoutSeconds: 1
    # initialDelaySeconds: 10
    # httpGet:
    #   path: /health
    #   port: 80
    startupProbe:
    # failureThreshold: 3
    # periodSeconds: 10
    # successThreshold: 1
    # timeoutSeconds: 1
    # initialDelaySeconds: 10
    # httpGet:
    #   path: /health
    #   port: 80

  # Resources to be defined for pod
  resources:
    limits:
      memory: 512Mi
      cpu: 0.5
    requests:
      memory: 64Mi
      cpu: 0.1

  # Add additional containers besides init and app containers
  additionalContainers:
  # - name: sidecar-contaner
  #   image: busybox
  #   imagePullPolicy: IfNotPresent
  #   command: ['/bin/sh']

  # Security Context for the pod
  securityContext:
  # fsGroup: 2000

  # Command for primary container
  command: []

  # Args for primary contaner
  args: []

  # List of ports for the primary container
  ports:
  #- containerPort: 80
  #  name: http
  #  protocol: TCP
  #- containerPort: 443
  #  name: https
  #  protocol: TCP
  volumeClaimTemplates:

# destinationRule for trafficPolicy
destinationRule:
  # - host: exchange-ws.exchange.svc.cluster.local
  enabled: false
  trafficPolicyLB: ROUND_ROBIN

# keda
keda:
  enabled: false
  # scaledObjects:
  # - name: test-scaled-object-prometheus
  #   scaleTargetRef:
  #     apiVersion: apps/v1                               # Optional. Default: apps/v1
  #     kind: kind-of-target-resource                     # Optional. Default: Deployment
  #     name: name-of-target-resource                     # Mandatory. Must be in the same namespace as the ScaledObject
  #     # envSourceContainerName: container-name          # Optional. Default: .spec.template.spec.containers[0]
  #   pollingInterval: 30
  #   cooldownPeriod: 300
  #   minReplicaCount: 1
  #   maxReplicaCount: 100
  #   # {list of triggers to activate scaling of the target resource}
  #   triggers:
  #     - type: prometheus
  #       metadata:
  #         serverAddress: http://prometheus-server
  #         metricName: nginx_connections_active_keda
  #         query: |
  #           sum(avg_over_time(nginx_ingress_nginx_connections_active{app="main-nginx-ingress"}[1m]))
  #         threshold: "100"
  #       # authenticationRef:                          # optional.
  #       #   name: keda-vault-prometheus-credential
  # - name: test-scaled-object-kafka
  #   scaleTargetRef:
  #     apiVersion: apps/v1                              # Optional. Default: apps/v1
  #     kind: kind-of-target-resource                    # Optional. Default: Deployment
  #     name: name-of-target-resource                    # Mandatory. Must be in the same namespace as the ScaledObject
  #     # envSourceContainerName: container-name         # Optional. Default: .spec.template.spec.containers[0]
  #   pollingInterval:  30                               # Optional. Default: 30 seconds
  #   cooldownPeriod:   300                              # Optional. Default: 300 seconds
  #   minReplicaCount:  1                                # Optional. Default: 1
  #   maxReplicaCount:  100                              # Optional. Default: 100
  #   fallback:                                          # Optional. Section to specify fallback options
  #     failureThreshold: 3                              # Mandatory if fallback section is included
  #     replicas: 6                                      # Mandatory if fallback section is included
  #   advanced:                                          # Optional. Section to specify advanced options
  #     restoreToOriginalReplicaCount: false             # Optional. Default: false
  #     horizontalPodAutoscalerConfig:                   # Optional. Section to specify HPA related options
  #       behavior:                                      # Optional. Use to modify HPA's scaling behavior
  #         scaleDown:
  #           stabilizationWindowSeconds: 300
  #           policies:
  #           - type: Percent
  #             value: 100
  #             periodSeconds: 15
  #   # {list of triggers to activate scaling of the target resource}
  #   triggers:
  #     - type: kafka
  #       metadata:
  #         bootstrapServers: localhost:9092
  #         consumerGroup: my-group                     # Make sure that this consumer group name is the same one as the one that is consuming topics
  #         topic: test-topic
  #         # Optional
  #         lagThreshold: "50"
  #       authenticationRef:
  #         name: keda-vault-kafka-credential

  # triggerAuthentications:
  #   - name: keda-vault-prometheus-credential
  #     spec:
  #       hashiCorpVault:                                     # Optional.
  #         address: {hashicorp-vault-address}                # Required.
  #         namespace: {hashicorp-vault-namespace}            # Optional. Default is root namespace. Useful for Vault Enterprise
  #         authentication: token | kubernetes                # Required.
  #         role: {hashicorp-vault-role}                      # Optional.
  #         mount: {hashicorp-vault-mount}                    # Optional.
  #         credential:                                       # Optional.
  #           token: {hashicorp-vault-token}                  # Optional.
  #           serviceAccount: {path-to-service-account-file}  # Optional.
  #         secrets:                                          # Required.
  #         - parameter: {scaledObject-parameter-name}        # Required.
  #           key: {hasicorp-vault-secret-key-name}           # Required.
  #           path: {hasicorp-vault-secret-path}              # Required.
  #   - name: keda-vault-kafka-credential
  #     kind: ClusterTriggerAuthentication                    # optional. Default is TriggerAuthentication. TriggerAuthentication is namespaced; ClusterTriggerAuthentication is cluster wide.
  #     spec:
  #       hashiCorpVault:                                     # Optional.
  #         address: {hashicorp-vault-address}                # Required.
  #         namespace: {hashicorp-vault-namespace}            # Optional. Default is root namespace. Useful for Vault Enterprise
  #         authentication: token | kubernetes                # Required.
  #         role: {hashicorp-vault-role}                      # Optional.
  #         mount: {hashicorp-vault-mount}                    # Optional.
  #         credential:                                       # Optional.
  #           token: {hashicorp-vault-token}                  # Optional.
  #           serviceAccount: {path-to-service-account-file}  # Optional.
  #         secrets:                                          # Required.
  #         - parameter: {scaledObject-parameter-name}        # Required.
  #           key: {hasicorp-vault-secret-key-name}           # Required.
  #           path: {hasicorp-vault-secret-path}              # Required.                          # Required.

securityGroupPolicy:
  enabled: false
  # securityGroupId: sg-01234567890abcdef                 # Mandatory if enabled true

# Argo-rollouts
argoRollouts:
  enabled: false # Will turn on canary deployment.
  # strategy:
  #   canary:
  #     analysis:
  #       startingStep: 4                # Required. Step when starts Analysing of deployment, should start after or with setWeight.
  #     steps:                           # Required.
  #       - setCanaryScale:              # deployed canary pod for manual tests by set header:
  #           replicas: 1
  #       - pause: { }
  #       - setCanaryScale:
  #           matchTrafficWeight: true
  #       - setWeight: 10
  #       - pause: { duration: 30s }
  #       - setWeight: 20
  #       - pause: { duration: 30s }
  #       - setWeight: 30
  #       - pause: { duration: 30s }
  #       - setWeight: 40
  #       - pause: { duration: 30s }
  #       - setWeight: 50
  #       - pause: { duration: 30s }
  #       - setWeight: 60
  #       - pause: { duration: 30s }
  #       - setWeight: 70
  #       - pause: { duration: 30s }
  #       - setWeight: 100
  # # AnalysisTemplate
  # metrics:                                           # Required.
  #   initialDelay: 30s                                # Required.
  #   failureLimit: 1                                  # Optional.
  #   interval: 30s
  #   successCondition: result[0] >= 0.90
  #   provider:
  #     prometheus:
  #       address: http://kiali-prometheus-server.kiali:9090
  #       query: >+
  #         sum(irate(istio_requests_total{
  #           reporter="source",
  #           destination_service=~"argo-rollouts-microservice-canary.argo-rollouts-microservice.svc.cluster.local",
  #           response_code!~"5.*"}[2m])
  #         )
  #         /
  #         sum(irate(istio_requests_total{
  #           reporter="source",
  #           destination_service=~"argo-rollouts-microservice-canary.argo-rollouts-microservice.svc.cluster.local"}[2m])
  #         )

kafkaTopics:
  # topic1:
  #   cluster: my-cluster
  #   name: events-1
  # topic2:
  #   cluster: my-cluster
  #   name: events-2
  # topic3:
  #   cluster: my-cluster
  #   name: events-3
  # topic4:
  #   cluster: other-cluster
  #   name: events-4
  #   spec:
  #     partitions: 5
  #     replicas: 3
  #     config:
  #       retention.ms: 7200000
  #       segment.bytes: 1073741824
  #       segment.bytes1: 1073741824

datadogMonitors:
  # test1:
  #   name: test1
  #   spec:
  #     query: "max(last_5m):max:elasticsearch.unassigned_shards{cluster_name:dev-applications} > 50"
  #     type: "query alert"
  #     name: "Elasticsearch Unassigned Shards test"
  #     message: "@filipe@unevenlabs.com"
  #     tags:
  #       - "test:datadog"
  #     priority: 5
  #     options:
  #       thresholds:
  #         critical: "50"
  # test2:
  #   name: test2
  #   spec:
  #     query: "max(last_5m):max:elasticsearch.unassigned_shards{cluster_name:dev-applications} > 50"
  #     type: "query alert"
  #     name: "Elasticsearch Unassigned Shards test"
  #     message: "@filipe@unevenlabs.com"
  #     tags:
  #       - "test:datadog"
  #     priority: 5
  #     options:
  #       thresholds:
  #         critical: "50"
